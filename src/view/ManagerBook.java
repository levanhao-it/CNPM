/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import entity.BookEntity;
import model.Book;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;

/**
 *
 * @author Diep.Tran
 */
public class ManagerBook extends javax.swing.JFrame {
    DefaultTableModel tableModel;
    
    List<Book> bookList = new ArrayList<>();
    
    /**
     * Creates new form StudentFrame
     */
    public ManagerBook() {
        initComponents();
        
        tableModel = (DefaultTableModel) tblBook.getModel();
        
        showBook();
    }
    
    private void showBook() {
        bookList = BookEntity.getAll();
        
        tableModel.setRowCount(0);
        
        bookList.forEach((book) -> {
            tableModel.addRow(new Object[] {book.getId(),book.getPublisher(), 
            		book.getNameBook(), book.getAuthor(), book.getRemainAmount()});
        });
    }

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		JPannel = new javax.swing.JPanel();
		JPannel.setBackground(new Color(176, 224, 230));
		jLabel1 = new javax.swing.JLabel();
		txtAddDate = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		txtName = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		txtAuthor = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		txtAmount = new javax.swing.JTextField();
		btnReset = new javax.swing.JButton();
		btnReset.setBackground(Color.PINK);
		btnDelete = new javax.swing.JButton();
		btnDelete.setBackground(Color.RED);
		btnUpdate = new javax.swing.JButton();
		btnFind = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblBook = new javax.swing.JTable();
		txtPublisher = new javax.swing.JTextField();
		

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Quản Lý Thư Viên -Quản lý Sách");

		JPannel.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Chi Tiết Sách"));

		jLabel1.setText("NXB:");

		jLabel2.setText("Tên Sách: ");

		jLabel3.setText("Tác Giả:");

		jLabel4.setText("Ngày Thêm:");

		jLabel5.setText("Số Lượng:");

		btnReset.setText("Reset");
		btnReset.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnResetActionPerformed(evt);
			}
		});

		btnDelete.setText("Xóa");
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

//        txtPublisher_1 = new JTextField();

		btnFind.setText("Tìm Kiếm");
		btnFind.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFindActionPerformed(evt);
			}
		});

		btnUpdate_1 = new JButton();
		btnUpdate_1.setBackground(Color.YELLOW);
		btnUpdate_1.setText("Sửa");
		btnUpdate_1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnUpdateActionPerformed(evt);
			}
		});

		btnAddBook = new JButton("Thêm ");
		btnAddBook.setBackground(Color.CYAN);
		btnAddBook.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				btnAddActionPerformed(arg0);
			}
		});
		btnSave = new javax.swing.JButton();
		btnSave.setBackground(Color.GREEN);

		btnSave.setText("Lưu");
		btnSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSaveActionPerformed(evt);
			}
		});
		
		txtID = new JTextField();
		txtID.setColumns(10);
		txtID.setVisible(false);

		javax.swing.GroupLayout gl_JPannel = new javax.swing.GroupLayout(JPannel);
		gl_JPannel.setHorizontalGroup(
			gl_JPannel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_JPannel.createSequentialGroup()
					.addGap(15)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.LEADING)
						.addComponent(jLabel5)
						.addComponent(jLabel4)
						.addComponent(jLabel3)
						.addComponent(jLabel1)
						.addComponent(jLabel2))
					.addGap(41)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.LEADING)
						.addComponent(txtID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(txtAddDate, 373, 440, Short.MAX_VALUE)
						.addComponent(txtPublisher, GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
						.addComponent(txtName, GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
						.addComponent(txtAuthor, GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
						.addComponent(txtAmount, GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
					.addContainerGap())
				.addGroup(Alignment.TRAILING, gl_JPannel.createSequentialGroup()
					.addGap(105)
					.addComponent(btnAddBook)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(btnDelete)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(btnUpdate_1, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(btnReset)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(btnSave)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(btnFind, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
					.addGap(21))
		);
		gl_JPannel.setVerticalGroup(
			gl_JPannel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_JPannel.createSequentialGroup()
					.addGap(8)
					.addComponent(txtID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addGap(18)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel1)
						.addComponent(txtPublisher, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel2)
						.addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel3)
						.addComponent(txtAuthor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel4)
						.addComponent(txtAddDate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel5)
						.addComponent(txtAmount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(gl_JPannel.createParallelGroup(Alignment.BASELINE)
						.addComponent(btnFind)
						.addComponent(btnSave)
						.addComponent(btnReset)
						.addComponent(btnUpdate_1)
						.addComponent(btnDelete)
						.addComponent(btnAddBook))
					.addContainerGap(47, Short.MAX_VALUE))
		);
		JPannel.setLayout(gl_JPannel);

		tblBook.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "ID", "Nhà Xuất Bản", "Tên Sách", "Tác Giả", "Còn Lại" }) {
			boolean[] canEdit = new boolean[] { false, false, false, true, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(tblBook);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(jScrollPane1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
						.addComponent(JPannel, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(JPannel, GroupLayout.PREFERRED_SIZE, 340, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
		);
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>

    protected void btnAddActionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
    	 String publisher = txtPublisher.getText();
         String nameBook = txtName.getText();
         String author = txtAuthor.getText();
         String addDate = txtAddDate.getText();
         int amount = Integer.parseInt(txtAmount.getText());
         String idNewP = BookEntity.getIdNew();
         
//         Book std = new Book(idNewP,publisher, nameBook, author, addDate, amount,amount);
         
         BookEntity.insertBook(idNewP,publisher, nameBook, author, addDate, amount,amount);
         
         showBook();
		
	}

	private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        txtPublisher.setText("");
        txtName.setText("");
        txtAuthor.setText("");
        txtAddDate.setText("");
        txtAmount.setText("");
    }                                        

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    	 String publisher = txtPublisher.getText();
         String nameBook = txtName.getText();
         String author = txtAuthor.getText();
         String addDate = txtAddDate.getText();
         int amount = Integer.parseInt(txtAmount.getText());
         String id=txtID.getText();
         
         
//         Book std = new Book(idNewP,publisher, nameBook, author, addDate, amount,amount);
         
         BookEntity.updateBook(id,publisher, nameBook, author, addDate, amount,amount);
         
         showBook();
       
    }                                       

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        int selectedIndex = tblBook.getSelectedRow();
        if(selectedIndex >= 0) {
            Book std = bookList.get(selectedIndex);
            
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sách?");
            System.out.println("option : " + option);
            
            if(option == 0) {
                BookEntity.deleteBook(std.getId());
                
                showBook();
            }
        }
    }   

	private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		String input = JOptionPane.showInputDialog(this, "Nhập id sách để chỉnh sửa");
		if (input != null && input.length() > 0) {
			bookList = BookEntity.getProductById(input);
			bookList.forEach((book) -> {
				txtName.setText(book.getNameBook());
				txtPublisher.setText(book.getPublisher());
		        txtAuthor.setText(book.getAuthor());
		        txtAddDate.setText(book.getAddDate());
		        txtAmount.setText(String.valueOf(book.getAmount()));
		        txtID.setText(book.getId());
		        
			});
			System.out.println("true");

		} else {
//            showBook();
			System.out.println("f");
		}
	}              

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Nhập tên sách để tìm kiếm");
        if(input != null && input.length() > 0) {
            bookList = BookEntity.getProductByName(input);
            
            tableModel.setRowCount(0);
        
            bookList.forEach((book) -> {
                tableModel.addRow(new Object[] {book.getId(),book.getPublisher(), 
                		book.getNameBook(), book.getAuthor(), book.getRemainAmount()});
            });
        } else {
            showBook();
        }
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel JPannel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBook;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtName;
    
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtAddDate;
    private javax.swing.JTextField txtAmount;
//    private JTextField txtPublisher_1;
    private JButton btnUpdate;
    private JButton btnUpdate_1;
    private JButton btnAddBook;
    private JTextField txtID;
//    private JButton btnUpdate_1;
}
    